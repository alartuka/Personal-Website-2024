{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tukaa\\\\port24\\\\src\\\\components\\\\utils\\\\TextGenerateEffect.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { motion, stagger, useAnimate } from 'framer-motion';\nimport \"../styles/Home.css\";\nimport { Container, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextGenerateEffect({\n  words,\n  wordsHighlighted,\n  className\n}) {\n  _s();\n  const [scope, animate] = useAnimate();\n  let wordsArray = words.split(\" \");\n  useEffect(() => {\n    animate(\"span\", {\n      opacity: 1\n    }, {\n      duration: 2,\n      delay: stagger(0.2)\n    });\n  }, [scope.current]);\n  const renderWords = () => {\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      ref: scope,\n      children: wordsArray.map((word, idx) => {\n        return /*#__PURE__*/_jsxDEV(motion.span, {\n          className: ` ${wordsHighlighted.includes(word) ? \"purple\" : \"nonPurple\"} opacity-0 `,\n          children: [word, \" \"]\n        }, word + idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"textEffect\",\n    style: {\n      fontWeight: 'bold',\n      marginTop: '1rem',\n      marginBottom: '1rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        id: \"TGE\",\n        style: {\n          color: 'black',\n          lineHeight: '3.8rem',\n          letterSpacing: '0.01rem'\n        },\n        children: renderWords()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(TextGenerateEffect, \"crQrtxD822sFKyor5CO2nze/XGc=\", false, function () {\n  return [useAnimate];\n});\n_c = TextGenerateEffect;\nexport default TextGenerateEffect;\nvar _c;\n$RefreshReg$(_c, \"TextGenerateEffect\");","map":{"version":3,"names":["React","useEffect","motion","stagger","useAnimate","Container","Typography","jsxDEV","_jsxDEV","TextGenerateEffect","words","wordsHighlighted","className","_s","scope","animate","wordsArray","split","opacity","duration","delay","current","renderWords","div","ref","children","map","word","idx","span","includes","fileName","_jsxFileName","lineNumber","columnNumber","style","fontWeight","marginTop","marginBottom","variant","id","color","lineHeight","letterSpacing","_c","$RefreshReg$"],"sources":["C:/Users/tukaa/port24/src/components/utils/TextGenerateEffect.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { motion, stagger, useAnimate } from 'framer-motion';\r\nimport \"../styles/Home.css\";\r\nimport { Container, Typography } from '@mui/material';\r\n\r\n\r\nfunction TextGenerateEffect({ words, wordsHighlighted, className }) {\r\n\r\n  const [scope, animate] = useAnimate();\r\n  let wordsArray = words.split(\" \");\r\n\r\n  useEffect(() => {\r\n    animate(\r\n      \"span\",\r\n      {opacity: 1},\r\n      {duration: 2,\r\n        delay: stagger(0.2),\r\n      }\r\n    );\r\n  }, [scope.current]);\r\n\r\n const renderWords = () => {\r\n  return (\r\n    <motion.div ref={scope}>\r\n      {wordsArray.map((word, idx) => {\r\n        return (\r\n          <motion.span\r\n            key={word + idx}\r\n            className={` ${wordsHighlighted.includes(word) ? \"purple\" : \"nonPurple\"} opacity-0 `}\r\n          >\r\n            {word}{\" \"}\r\n          </motion.span>\r\n        );\r\n      })}\r\n    </motion.div>\r\n  )\r\n }\r\n\r\n  return (\r\n    <div className=\"textEffect\" style={{ fontWeight: 'bold', marginTop: '1rem', marginBottom: '1rem' }}>\r\n      <Container>\r\n        <Typography variant=\"h1\" id=\"TGE\" style={{ color: 'black', lineHeight: '3.8rem', letterSpacing: '0.01rem' }}>\r\n          {renderWords()}\r\n        </Typography>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextGenerateEffect;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,MAAM,EAAEC,OAAO,EAAEC,UAAU,QAAQ,eAAe;AAC3D,OAAO,oBAAoB;AAC3B,SAASC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtD,SAASC,kBAAkBA,CAAC;EAAEC,KAAK;EAAEC,gBAAgB;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAElE,MAAM,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGX,UAAU,CAAC,CAAC;EACrC,IAAIY,UAAU,GAAGN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC;EAEjChB,SAAS,CAAC,MAAM;IACdc,OAAO,CACL,MAAM,EACN;MAACG,OAAO,EAAE;IAAC,CAAC,EACZ;MAACC,QAAQ,EAAE,CAAC;MACVC,KAAK,EAAEjB,OAAO,CAAC,GAAG;IACpB,CACF,CAAC;EACH,CAAC,EAAE,CAACW,KAAK,CAACO,OAAO,CAAC,CAAC;EAEpB,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACzB,oBACEd,OAAA,CAACN,MAAM,CAACqB,GAAG;MAACC,GAAG,EAAEV,KAAM;MAAAW,QAAA,EACpBT,UAAU,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;QAC7B,oBACEpB,OAAA,CAACN,MAAM,CAAC2B,IAAI;UAEVjB,SAAS,EAAE,IAAID,gBAAgB,CAACmB,QAAQ,CAACH,IAAI,CAAC,GAAG,QAAQ,GAAG,WAAW,aAAc;UAAAF,QAAA,GAEpFE,IAAI,EAAE,GAAG;QAAA,GAHLA,IAAI,GAAGC,GAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIJ,CAAC;MAElB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAEhB,CAAC;EAEA,oBACE1B,OAAA;IAAKI,SAAS,EAAC,YAAY;IAACuB,KAAK,EAAE;MAAEC,UAAU,EAAE,MAAM;MAAEC,SAAS,EAAE,MAAM;MAAEC,YAAY,EAAE;IAAO,CAAE;IAAAb,QAAA,eACjGjB,OAAA,CAACH,SAAS;MAAAoB,QAAA,eACRjB,OAAA,CAACF,UAAU;QAACiC,OAAO,EAAC,IAAI;QAACC,EAAE,EAAC,KAAK;QAACL,KAAK,EAAE;UAAEM,KAAK,EAAE,OAAO;UAAEC,UAAU,EAAE,QAAQ;UAAEC,aAAa,EAAE;QAAU,CAAE;QAAAlB,QAAA,EACzGH,WAAW,CAAC;MAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACrB,EAAA,CAzCQJ,kBAAkB;EAAA,QAEAL,UAAU;AAAA;AAAAwC,EAAA,GAF5BnC,kBAAkB;AA2C3B,eAAeA,kBAAkB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}