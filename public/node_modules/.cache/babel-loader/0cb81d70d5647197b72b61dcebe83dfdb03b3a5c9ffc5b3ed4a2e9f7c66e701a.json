{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tukaa\\\\port24\\\\src\\\\components\\\\pages\\\\Background.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\n// import { loadFull } from \"tsparticles\";\nimport { loadSlim } from \"@tsparticles/slim\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Background() {\n  _s();\n  const [init, setInit] = useState(false);\n\n  // this should be run only once per application lifetime\n  useEffect(() => {\n    initParticlesEngine(async engine => {\n      // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n      // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n      // starting from v2 you can add only the features you need reducing the bundle size\n      //await loadAll(engine);\n      //await loadFull(engine);\n      await loadSlim(engine);\n      //await loadBasic(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, []);\n  const particlesLoaded = container => {\n    console.log(container);\n  };\n  const options = useMemo(() => ({\n    background: {\n      color: {\n        value: \"#0d47a1\"\n      }\n    },\n    fpsLimit: 120,\n    interactivity: {\n      events: {\n        onClick: {\n          enable: true,\n          mode: \"push\"\n        },\n        onHover: {\n          enable: false,\n          mode: \"repulse\"\n        }\n      },\n      modes: {\n        push: {\n          quantity: 4\n        },\n        repulse: {\n          distance: 200,\n          duration: 0.4\n        }\n      }\n    },\n    particles: {\n      color: {\n        value: \"#ffffff\"\n      },\n      links: {\n        color: \"#ffffff\",\n        distance: 150,\n        enable: false,\n        // ==== DISABLED ====\n        opacity: 0.5,\n        width: 1\n      },\n      move: {\n        direction: \"none\",\n        enable: true,\n        // outModes: {\n        //   default: \"bounce\",\n        // },\n        random: true,\n        speed: {\n          min: 0,\n          max: 0.9\n        },\n        straight: false\n      },\n      number: {\n        density: {\n          enable: true,\n          value_area: 800\n        },\n        value: 350\n      },\n      opacity: {\n        value: {\n          min: 0.5,\n          max: 1.5\n        }\n      },\n      shape: {\n        type: \"star\"\n      },\n      size: {\n        value: {\n          min: 1,\n          max: 3\n        }\n      }\n    },\n    detectRetina: true\n  }), []);\n  if (init) {\n    return /*#__PURE__*/_jsxDEV(Particles, {\n      id: \"tsparticles\",\n      particlesLoaded: particlesLoaded,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this);\n  }\n  return null;\n}\n_s(Background, \"eB+NWpxmGZSqHQDaTSx/Qv0E/5M=\");\n_c = Background;\nexport default Background;\nvar _c;\n$RefreshReg$(_c, \"Background\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","Particles","initParticlesEngine","loadSlim","jsxDEV","_jsxDEV","Background","_s","init","setInit","engine","then","particlesLoaded","container","console","log","options","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","modes","push","quantity","repulse","distance","duration","particles","links","opacity","width","move","direction","random","speed","min","max","straight","number","density","value_area","shape","type","size","detectRetina","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tukaa/port24/src/components/pages/Background.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\r\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\r\n// import { loadFull } from \"tsparticles\";\r\nimport { loadSlim } from \"@tsparticles/slim\";\r\n\r\nfunction Background() {\r\n\r\n    const [init, setInit] = useState(false);\r\n\r\n    // this should be run only once per application lifetime\r\n    useEffect(() => {\r\n      initParticlesEngine(async (engine) => {\r\n        // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\r\n        // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n        // starting from v2 you can add only the features you need reducing the bundle size\r\n        //await loadAll(engine);\r\n        //await loadFull(engine);\r\n        await loadSlim(engine);\r\n        //await loadBasic(engine);\r\n      }).then(() => {\r\n        setInit(true);\r\n      });\r\n    }, []);\r\n  \r\n    const particlesLoaded = (container) => {\r\n      console.log(container);\r\n    };\r\n  \r\n    const options = useMemo(\r\n      () => ({\r\n        background: {\r\n          color: {\r\n            value: \"#0d47a1\",\r\n          },\r\n        },\r\n        fpsLimit: 120,\r\n        interactivity: {\r\n          events: {\r\n            onClick: {\r\n              enable: true,\r\n              mode: \"push\",\r\n            },\r\n            onHover: {\r\n              enable: false,\r\n              mode: \"repulse\",\r\n            },\r\n          },\r\n          modes: {\r\n            push: {\r\n              quantity: 4,\r\n            },\r\n            repulse: {\r\n              distance: 200,\r\n              duration: 0.4,\r\n            },\r\n          },\r\n        },\r\n        particles: {\r\n          color: {\r\n            value: \"#ffffff\",\r\n          },\r\n          links: {\r\n            color: \"#ffffff\",\r\n            distance: 150,\r\n            enable: false, // ==== DISABLED ====\r\n            opacity: 0.5,\r\n            width: 1,\r\n          },\r\n          move: {\r\n            direction: \"none\",\r\n            enable: true,\r\n            // outModes: {\r\n            //   default: \"bounce\",\r\n            // },\r\n            random: true,\r\n            speed: { min: 0, max: 0.9 },\r\n            straight: false,\r\n          },\r\n          number: {\r\n            density: {\r\n              enable: true,\r\n              value_area: 800,\r\n            },\r\n            value: 350,\r\n          },\r\n          opacity: {\r\n            value: { min: 0.5, max: 1.5 },\r\n          },\r\n          shape: {\r\n            type: \"star\",\r\n          },\r\n          size: {\r\n            value: { min: 1, max: 3 },\r\n          },\r\n        },\r\n        detectRetina: true,\r\n      }),\r\n      [],\r\n    );\r\n  \r\n    if (init) {\r\n      return (\r\n        <Particles\r\n          id=\"tsparticles\"\r\n          particlesLoaded={particlesLoaded}\r\n          options={options}\r\n        />\r\n      );\r\n    }\r\n\r\n  return null;\r\n}\r\n\r\nexport default Background;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}